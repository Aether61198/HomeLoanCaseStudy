@model HomeLoanCaseStudy.Models.Users

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-primary">
            <strong>Success! </strong>@ViewBag.Message
            Go to @Html.ActionLink("Login", "Login", "Users", new { }, new
             {
                 @class = "btn btn-primary"
             })
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="container text-primary">
                <div class="row">
                    <div class="col-md-6 position-absolute top-50 start-50 translate-middle">
                        <div class="card card-body">
                            <h2 class="display-4 fw-normal text-center">Register</h2>
                            <div class="container mb-2">
                                <hr class="bg-primary" />
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.EditorFor(model => model.FirstName, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control global-input",
                                            required = "required"
                                        }
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger mb-3" })
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.EditorFor(model => model.LastName, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control global-input",
                                            required = "required"
                                        }
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger mb-3" })
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.EditorFor(model => model.EmailAddress, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control global-input",
                                            required = "required"
                                        }
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger mb-3" })
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.EditorFor(model => model.Password, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control global-input",
                                            required = "required",
                                            pattern = @"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{6,}$"
                                        }
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <p class="text-secondary mt-3">The password must be atleast 6 characters long, include a capital letter, a small letter, a special character and a digit.</p>
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.EditorFor(model => model.ConfirmPassword, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "form-control global-input",
                                            required = "required",
                                            pattern = @"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{6,}$"
                                        }
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger mb-3" })
                                <div class="input-group input-group mt-3">
                                    <span class="input-group-text" style="min-width: 200px">
                                        @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                    @Html.DropDownListFor(model => model.UserRole, new List<SelectListItem>()
                                    {
                                        new SelectListItem{Text="Customer", Value="Customer", Selected=true},
                                        new SelectListItem{Text="Admin", Value="Admin"}
                                    }, "--Select User Role--", new
                                                    {
                                                        htmlAttributes = new
                                    {
                                        @class = "form-control global-input",
                                        required = "required"
                                    }
                                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger mb-3" })
                                <hr class="bg-primary my-3" />
                                <div class="input-group input-group my-3">
                                    <button type="submit" class="btn btn-primary" style="min-width: 100%">
                                        Register<i class="fa fa-user-plus ms-2"></i>
                                    </button>
                                </div>
                                <div class="input-group input-group my-3">
                                    <button class="btn btn-outline-primary" type="button" onclick="location.href='@Url.Action("Login", "Users")'"
                                            style="min-width: 100%;">
                                        <i class="fa fa-arrow-left me-2"></i>Login<i class="fa fa-user ms-2"></i>
                                    </button>
                                </div>
                                @if (ViewBag.Message != null)
                                {
                                    <div class="alert alert-danger">
                                        <strong>Error! </strong>@ViewBag.Message
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
